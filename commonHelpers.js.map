{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["\n\n\n\nconst API_KEY = '43226276-a07a0c17e428cfffb021b9b05';\n\nconst params = new URLSearchParams({\n  key: API_KEY,\n  // q: userSearch, // слово для поиска. То, что будет вводить пользователь.\n  image_type: 'photo', //тип изображения. Нужны только фотографии, поэтому поставь значение  photo.\n  orientation: 'horizontal', // ориентация фотографии. Поставь значение  horizontal.\n  safesearch: true, // фильтр по возрасту. Поставь значение  true.\n});\n\nexport function fetchImages(userSearch) {\n  const url = `https://pixabay.com/api/?${params}&q=${encodeURIComponent(\n    userSearch\n  )}`;\n  return fetch(url)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      console.log(response); // promis\n      return response.json(); // object\n    })\n    .then(data => {\n      if (data.hits.length === 0) {\n        throw new Error(response.status);\n      }\n      return data.hits;\n    });\n  // .catch(error =>\n  //   alert(\n  //     'Sorry, there are no images matching your search query. Please try again!'\n  //   )\n  // );\n}","export function createMarkup(array) {\n  return array\n    .map(\n      ({ id, largeImageURL, previewURL, tags }) =>\n        `<li class=\"list-item\">\n          <a href=\"${largeImageURL}\" class=\"list-link\">\n          <img src=\"${previewURL}\" alt=\"${tags}\" class=\"item-img\" width=\"300\">\n          </a>\n          </li>`\n    )\n    .join('');\n}\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst imgGallery = document.querySelector('.img-list');\n\nconsole.log(imgGallery);\n\nimport { fetchImages } from './js/pixabay-api';\n\nimport { createMarkup } from './js/render-functions';\n\nconst form = document.querySelector('.search-form');\nform.addEventListener('submit', onSubmit);\nconsole.dir(form);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  const elements = event.target.elements;\n  if (elements.images.value.trim() === '') {\n    return;\n  }\n  const userSearch = elements.images.value.trim();\n  fetchImages(userSearch)\n    .then(data =>\n      imgGallery.insertAdjacentHTML('beforeend', createMarkup(data))\n    )\n    .catch(error => {\n      alert(\n        'Sorry, there are no images matching your search query. Please try again!'\n      );\n      iziToast.show({\n        title: 'Hey',\n        message: 'What would you like to add?',\n      });\n    });\n  //   console.log(userSearch);\n}\n"],"names":["API_KEY","params","fetchImages","userSearch","url","response","data","createMarkup","array","id","largeImageURL","previewURL","tags","imgGallery","form","onSubmit","event","elements","error","iziToast"],"mappings":"svBAIA,MAAMA,EAAU,qCAEVC,EAAS,IAAI,gBAAgB,CACjC,IAAKD,EAEL,WAAY,QACZ,YAAa,aACb,WAAY,EACd,CAAC,EAEM,SAASE,EAAYC,EAAY,CACtC,MAAMC,EAAM,4BAA4BH,CAAM,MAAM,mBAClDE,CACD,CAAA,GACD,OAAO,MAAMC,CAAG,EACb,KAAKC,GAAY,CAChB,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAMA,EAAS,MAAM,EAEjC,eAAQ,IAAIA,CAAQ,EACbA,EAAS,MACtB,CAAK,EACA,KAAKC,GAAQ,CACZ,GAAIA,EAAK,KAAK,SAAW,EACvB,MAAM,IAAI,MAAM,SAAS,MAAM,EAEjC,OAAOA,EAAK,IAClB,CAAK,CAML,CCrCO,SAASC,EAAaC,EAAO,CAClC,OAAOA,EACJ,IACC,CAAC,CAAE,GAAAC,EAAI,cAAAC,EAAe,WAAAC,EAAY,KAAAC,CAAM,IACtC;AAAA,qBACaF,CAAa;AAAA,sBACZC,CAAU,UAAUC,CAAI;AAAA;AAAA,gBAGzC,EACA,KAAK,EAAE,CACZ,CCRA,MAAMC,EAAa,SAAS,cAAc,WAAW,EAErD,QAAQ,IAAIA,CAAU,EAMtB,MAAMC,EAAO,SAAS,cAAc,cAAc,EAClDA,EAAK,iBAAiB,SAAUC,CAAQ,EACxC,QAAQ,IAAID,CAAI,EAEhB,SAASC,EAASC,EAAO,CACvBA,EAAM,eAAc,EACpB,MAAMC,EAAWD,EAAM,OAAO,SAC9B,GAAIC,EAAS,OAAO,MAAM,KAAI,IAAO,GACnC,OAEF,MAAMd,EAAac,EAAS,OAAO,MAAM,KAAI,EAC7Cf,EAAYC,CAAU,EACnB,KAAKG,GACJO,EAAW,mBAAmB,YAAaN,EAAaD,CAAI,CAAC,CAC9D,EACA,MAAMY,GAAS,CACd,MACE,0EACR,EACMC,EAAS,KAAK,CACZ,MAAO,MACP,QAAS,6BACjB,CAAO,CACP,CAAK,CAEL"}